from config import *
import inspect
from .NoneProperty import NoneProperty
from .StructProperty import StructProperty
from .StrProperty import StrProperty
from .TextProperty import TextProperty
from .FloatProperty import FloatProperty
from .BoolProperty import BoolProperty
from .ArrayProperty import ArrayProperty


class MapProperty:
    padding = bytes([0x00, 0x00, 0x00, 0x00])
    type = "MapProperty"

    def __init__(self, name, binary_read):
        STRUCT_INDENT_COUNTER["map"] += 1
        logger.debug(
            f"{self.__class__.__name__}.{inspect.currentframe().f_code.co_name}"
        )
        self.name = name
        self.type = "MapProperty"
        data_start_position = binary_read.offset
        self.content_size = binary_read.read_uint32()  # contentSize
        binary_read.read_bytes(len(MapProperty.padding))
        self.key_type = binary_read.read_string()

        self.value_type = binary_read.read_string()
        binary_read.read_bytes(1)
        data_end_position = self.content_size + binary_read.offset
        self.value = []
        binary_read.read_bytes(len(MapProperty.padding))
        content_count = binary_read.read_uint32()
        logger.info(
            f"\x1b[38;5;82mMapProperty name:{self.name}, key_type:{self.key_type}, value_type:{self.value_type} content_count:{content_count}, content_size:{self.content_size}, position:{binary_read.offset}"
        )
        if self.key_type == "StructProperty":
            if self.value_type == "StructProperty":
                if (self.content_size - 8) / content_count == 32:
                    for _ in range(content_count):
                        guid_key = binary_read.read_uuid()
                        guid_value = binary_read.read_uuid()
                        self.value.append({guid_key: guid_value})
                else:
                    for _ in range(content_count):
                        output = []
                        Guid = binary_read.read_uuid()
                        next_property = None
                        while not isinstance(next_property, NoneProperty):
                            next_property = binary_read.read_property()
                            output.append(next_property)
                        self.value.append({Guid: output})

            elif self.value_type == "StrProperty":
                for _ in range(content_count):
                    guid = binary_read.read_uuid()
                    value = binary_read.read_string()
                    self.value.append({guid: value})

            else:
                logger.error(
                    f"Unknown MapProperty key:value type, {self.key_type}:{self.value_type}"
                )
        if self.key_type == "IntProperty":
            if self.value_type == "StructProperty":
                for _ in range(content_count):
                    output = []
                    key = binary_read.read_uint32()
                    next_property = None
                    while not isinstance(next_property, NoneProperty):
                        next_property = binary_read.read_property()
                        output.append(next_property)
                    self.value.append({key: output})

            elif self.value_type == "StrProperty":
                for _ in range(content_count):
                    key = binary_read.read_uuid()
                    value = binary_read.read_string()
                    self.value.append({key: value})

            else:
                logger.error(
                    f"Unknown MapProperty key:value type, {self.key_type}:{self.value_type}"
                )

        if binary_read.offset > data_end_position:
            raise Exception(
                f"Overread array {self.name} that started at {data_start_position} and ends at {data_end_position}. {binary_read.offset}"
            )

        STRUCT_INDENT_COUNTER["map"] -= 1
        logger.info(
            f"\x1b[38;5;82mEnd of MapProperty {self.name}, Position:{binary_read.offset}, data_end_position:{data_end_position}, {STRUCT_INDENT_COUNTER}"
        )
        # logger.debug(f'Position:{binary_read.offset}, name:{self.name}, type:{self.type}, value length:{len(self.value)}')

    def __repr__(self):
        return "{}, {}, {}, {}, {}".format(
            self.name, self.type, self.key_type, self.value_type, self.value
        )


if __name__ == "__main__":
    map_data = (
        "0E 00 00 00 47 65 52 65 6E 4D 61 70 52 69 5A 68 69 00 "
        "0C 00 00 00 4D 61 70 50 72 6F 70 65 72 74 79 00 "
        "80 0D 00 00 "
        "00 00 00 00 "
        "0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 00 00 00 00 00 03 00 00 00 E3 F7 88 7E 64 77 A8 40 AF 70 66 E5 93 52 EB F9 0B 00 00 00 41 72 72 61 79 52 69 5A 68 69 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 76 04 00 00 00 00 00 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 00 02 00 00 00 0B 00 00 00 41 72 72 61 79 52 69 5A 68 69 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 22 04 00 00 00 00 00 00 11 00 00 00 47 6F 6E 67 48 75 69 52 69 5A 68 69 44 61 74 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0E 00 00 00 52 69 5A 68 69 44 61 74 65 54 69 6D 65 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 08 00 00 00 00 00 00 00 09 00 00 00 44 61 74 65 54 69 6D 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 38 BC 08 86 28 DD 08 05 00 00 00 54 79 70 65 00 0C 00 00 00 49 6E 74 50 72 6F 70 65 72 74 79 00 04 00 00 00 00 00 00 00 00 1C 00 00 00 0E 00 00 00 50 61 72 61 6D 41 72 72 61 79 54 78 74 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 51 01 00 00 00 00 00 00 0D 00 00 00 54 65 78 74 50 72 6F 70 65 72 74 79 00 00 04 00 00 00 01 00 00 00 02 02 00 00 00 FF 01 00 00 00 0C 00 00 00 7B 30 7D 20 28 20 7B 31 7D 20 29 00 02 00 00 00 04 02 00 00 00 FF 01 00 00 00 0B 00 00 00 44 61 72 6B 20 41 6E 67 65 6C 00 04 02 00 00 00 FF 01 00 00 00 0B 00 00 00 44 61 72 6B 20 41 6E 67 65 6C 00 01 00 00 00 02 08 00 00 00 00 03 00 00 00 57 53 00 10 00 00 00 42 75 4C 75 6F 44 69 57 65 69 5A 68 69 59 65 00 0A 00 00 00 7B 30 7D 7B 31 7D 7B 32 7D 00 03 00 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 31 36 46 39 34 34 37 34 36 44 34 39 44 39 33 42 39 36 35 38 31 39 34 30 31 31 33 37 39 33 46 00 FC FF FF FF 41 6D 3E 65 05 80 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 42 45 36 36 41 35 39 34 46 39 34 44 36 33 31 37 36 30 30 38 41 41 34 32 35 43 35 31 30 38 37 00 FD FF FF FF 4E 4F 36 96 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 42 43 39 36 45 39 44 31 34 41 31 33 44 32 41 35 46 42 41 30 34 31 41 30 45 32 46 42 35 44 38 30 00 FD FF FF FF 6B 53 EB 58 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 00 FF 00 00 00 00 05 00 00 00 4E 6F 6E 65 00 0E 00 00 00 52 69 5A 68 69 44 61 74 65 54 69 6D 65 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 08 00 00 00 00 00 00 00 09 00 00 00 44 61 74 65 54 69 6D 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 90 69 7D 0D 86 28 DD 08 05 00 00 00 54 79 70 65 00 0C 00 00 00 49 6E 74 50 72 6F 70 65 72 74 79 00 04 00 00 00 00 00 00 00 00 0E 00 00 00 0E 00 00 00 50 61 72 61 6D 41 72 72 61 79 54 78 74 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 51 01 00 00 00 00 00 00 0D 00 00 00 54 65 78 74 50 72 6F 70 65 72 74 79 00 00 04 00 00 00 01 00 00 00 02 02 00 00 00 FF 01 00 00 00 0C 00 00 00 7B 30 7D 20 28 20 7B 31 7D 20 29 00 02 00 00 00 04 02 00 00 00 FF 01 00 00 00 0B 00 00 00 44 61 72 6B 20 41 6E 67 65 6C 00 04 02 00 00 00 FF 01 00 00 00 0B 00 00 00 44 61 72 6B 20 41 6E 67 65 6C 00 01 00 00 00 02 08 00 00 00 00 03 00 00 00 57 53 00 10 00 00 00 42 75 4C 75 6F 44 69 57 65 69 5A 68 69 59 65 00 0A 00 00 00 7B 30 7D 7B 31 7D 7B 32 7D 00 03 00 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 31 36 46 39 34 34 37 34 36 44 34 39 44 39 33 42 39 36 35 38 31 39 34 30 31 31 33 37 39 33 46 00 FC FF FF FF 41 6D 3E 65 05 80 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 42 45 36 36 41 35 39 34 46 39 34 44 36 33 31 37 36 30 30 38 41 41 34 32 35 43 35 31 30 38 37 00 FD FF FF FF 4E 4F 36 96 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 42 43 39 36 45 39 44 31 34 41 31 33 44 32 41 35 46 42 41 30 34 31 41 30 45 32 46 42 35 44 38 30 00 FD FF FF FF 6B 53 EB 58 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 00 FF 00 00 00 00 05 00 00 00 4E 6F 6E 65 00 05 00 00 00 4E 6F 6E 65 00 C8 9A 26 78 E3 11 E1 41 A1 16 F5 98 00 E4 4F C2 0B 00 00 00 41 72 72 61 79 52 69 5A 68 69 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 6E 04 00 00 00 00 00 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 00 02 00 00 00 0B 00 00 00 41 72 72 61 79 52 69 5A 68 69 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 1A 04 00 00 00 00 00 00 11 00 00 00 47 6F 6E 67 48 75 69 52 69 5A 68 69 44 61 74 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0E 00 00 00 52 69 5A 68 69 44 61 74 65 54 69 6D 65 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 08 00 00 00 00 00 00 00 09 00 00 00 44 61 74 65 54 69 6D 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 70 2B 33 0B 86 28 DD 08 05 00 00 00 54 79 70 65 00 0C 00 00 00 49 6E 74 50 72 6F 70 65 72 74 79 00 04 00 00 00 00 00 00 00 00 1C 00 00 00 0E 00 00 00 50 61 72 61 6D 41 72 72 61 79 54 78 74 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 4D 01 00 00 00 00 00 00 0D 00 00 00 54 65 78 74 50 72 6F 70 65 72 74 79 00 00 04 00 00 00 01 00 00 00 02 02 00 00 00 FF 01 00 00 00 0C 00 00 00 7B 30 7D 20 28 20 7B 31 7D 20 29 00 02 00 00 00 04 02 00 00 00 FF 01 00 00 00 09 00 00 00 4F 61 6B 72 61 76 65 6E 00 04 02 00 00 00 FF 01 00 00 00 09 00 00 00 4F 61 6B 72 61 76 65 6E 00 01 00 00 00 02 08 00 00 00 00 03 00 00 00 57 53 00 10 00 00 00 42 75 4C 75 6F 44 69 57 65 69 5A 68 69 59 65 00 0A 00 00 00 7B 30 7D 7B 31 7D 7B 32 7D 00 03 00 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 31 36 46 39 34 34 37 34 36 44 34 39 44 39 33 42 39 36 35 38 31 39 34 30 31 31 33 37 39 33 46 00 FC FF FF FF 41 6D 3E 65 05 80 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 42 45 36 36 41 35 39 34 46 39 34 44 36 33 31 37 36 30 30 38 41 41 34 32 35 43 35 31 30 38 37 00 FD FF FF FF 4E 4F 36 96 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 42 43 39 36 45 39 44 31 34 41 31 33 44 32 41 35 46 42 41 30 34 31 41 30 45 32 46 42 35 44 38 30 00 FD FF FF FF 6B 53 EB 58 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 00 FF 00 00 00 00 05 00 00 00 4E 6F 6E 65 00 0E 00 00 00 52 69 5A 68 69 44 61 74 65 54 69 6D 65 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 08 00 00 00 00 00 00 00 09 00 00 00 44 61 74 65 54 69 6D 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 A0 FB F7 0E 86 28 DD 08 05 00 00 00 54 79 70 65 00 0C 00 00 00 49 6E 74 50 72 6F 70 65 72 74 79 00 04 00 00 00 00 00 00 00 00 0E 00 00 00 0E 00 00 00 50 61 72 61 6D 41 72 72 61 79 54 78 74 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 4D 01 00 00 00 00 00 00 0D 00 00 00 54 65 78 74 50 72 6F 70 65 72 74 79 00 00 04 00 00 00 01 00 00 00 02 02 00 00 00 FF 01 00 00 00 0C 00 00 00 7B 30 7D 20 28 20 7B 31 7D 20 29 00 02 00 00 00 04 02 00 00 00 FF 01 00 00 00 09 00 00 00 4F 61 6B 72 61 76 65 6E 00 04 02 00 00 00 FF 01 00 00 00 09 00 00 00 4F 61 6B 72 61 76 65 6E 00 01 00 00 00 02 08 00 00 00 00 03 00 00 00 57 53 00 10 00 00 00 42 75 4C 75 6F 44 69 57 65 69 5A 68 69 59 65 00 0A 00 00 00 7B 30 7D 7B 31 7D 7B 32 7D 00 03 00 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 31 36 46 39 34 34 37 34 36 44 34 39 44 39 33 42 39 36 35 38 31 39 34 30 31 31 33 37 39 33 46 00 FC FF FF FF 41 6D 3E 65 05 80 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 42 45 36 36 41 35 39 34 46 39 34 44 36 33 31 37 36 30 30 38 41 41 34 32 35 43 35 31 30 38 37 00 FD FF FF FF 4E 4F 36 96 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 42 43 39 36 45 39 44 31 34 41 31 33 44 32 41 35 46 42 41 30 34 31 41 30 45 32 46 42 35 44 38 30 00 FD FF FF FF 6B 53 EB 58 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 00 FF 00 00 00 00 05 00 00 00 4E 6F 6E 65 00 05 00 00 00 4E 6F 6E 65 00 D4 5C D3 EC C1 76 4A 4C 99 F8 63 39 49 08 32 9D 0B 00 00 00 41 72 72 61 79 52 69 5A 68 69 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 92 03 00 00 00 00 00 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 00 02 00 00 00 0B 00 00 00 41 72 72 61 79 52 69 5A 68 69 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 3E 03 00 00 00 00 00 00 11 00 00 00 47 6F 6E 67 48 75 69 52 69 5A 68 69 44 61 74 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0E 00 00 00 52 69 5A 68 69 44 61 74 65 54 69 6D 65 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 08 00 00 00 00 00 00 00 09 00 00 00 44 61 74 65 54 69 6D 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 6E 27 B6 0C 45 DD 08 05 00 00 00 54 79 70 65 00 0C 00 00 00 49 6E 74 50 72 6F 70 65 72 74 79 00 04 00 00 00 00 00 00 00 00 1C 00 00 00 0E 00 00 00 50 61 72 61 6D 41 72 72 61 79 54 78 74 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 57 01 00 00 00 00 00 00 0D 00 00 00 54 65 78 74 50 72 6F 70 65 72 74 79 00 00 04 00 00 00 01 00 00 00 02 02 00 00 00 FF 01 00 00 00 0C 00 00 00 7B 30 7D 20 28 20 7B 31 7D 20 29 00 02 00 00 00 04 02 00 00 00 FF 01 00 00 00 0E 00 00 00 53 79 6E 79 73 74 65 72 20 44 61 76 65 00 04 02 00 00 00 FF 01 00 00 00 0E 00 00 00 53 79 6E 79 73 74 65 72 20 44 61 76 65 00 01 00 00 00 02 08 00 00 00 00 03 00 00 00 57 53 00 10 00 00 00 42 75 4C 75 6F 44 69 57 65 69 5A 68 69 59 65 00 0A 00 00 00 7B 30 7D 7B 31 7D 7B 32 7D 00 03 00 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 39 31 36 46 39 34 34 37 34 36 44 34 39 44 39 33 42 39 36 35 38 31 39 34 30 31 31 33 37 39 33 46 00 FC FF FF FF 41 6D 3E 65 05 80 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 46 38 35 37 44 46 36 42 34 44 45 31 38 34 36 43 33 34 39 33 34 45 42 37 44 32 38 32 38 46 31 35 00 FD FF FF FF D8 9A 36 96 00 00 04 00 00 00 00 00 01 00 00 00 00 21 00 00 00 42 43 39 36 45 39 44 31 34 41 31 33 44 32 41 35 46 42 41 30 34 31 41 30 45 32 46 42 35 44 38 30 00 FD FF FF FF 6B 53 EB 58 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 00 FF 00 00 00 00 05 00 00 00 4E 6F 6E 65 00 0E 00 00 00 52 69 5A 68 69 44 61 74 65 54 69 6D 65 00 0F 00 00 00 53 74 72 75 63 74 50 72 6F 70 65 72 74 79 00 08 00 00 00 00 00 00 00 09 00 00 00 44 61 74 65 54 69 6D 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 58 59 BA 0C 45 DD 08 05 00 00 00 54 79 70 65 00 0C 00 00 00 49 6E 74 50 72 6F 70 65 72 74 79 00 04 00 00 00 00 00 00 00 00 1D 00 00 00 0E 00 00 00 50 61 72 61 6D 41 72 72 61 79 54 78 74 00 0E 00 00 00 41 72 72 61 79 50 72 6F 70 65 72 74 79 00 67 00 00 00 00 00 00 00 0D 00 00 00 54 65 78 74 50 72 6F 70 65 72 74 79 00 00 02 00 00 00 01 00 00 00 02 02 00 00 00 FF 01 00 00 00 0C 00 00 00 7B 30 7D 20 28 20 7B 31 7D 20 29 00 02 00 00 00 04 02 00 00 00 FF 01 00 00 00 0E 00 00 00 53 79 6E 79 73 74 65 72 20 44 61 76 65 00 04 02 00 00 00 FF 01 00 00 00 0E 00 00 00 53 79 6E 79 73 74 65 72 20 44 61 76 65 00 00 00 00 00 FF 00 00 00 00 05 00 00 00 4E 6F 6E 65 00 05 00 00 00 4E 6F 6E 65"
    )
